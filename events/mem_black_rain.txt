# Black Rain
# By ViolentBeetle

namespace = mem_black_rain

# Initial trigger. Probably tied to mid-game
@timer = 1
@timermax = 29

@spreadloop = 10
@spreadloopmax = 10
event = {
	id = mem_black_rain.1
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		any_country = {
			is_ai = no
			is_gestalt = no
		}
	}

	immediate = {
		random_country = {
			limit = {
				is_country_type = default
				num_communications > 4
				num_owned_planets > 4
				any_owned_planet = {
					is_capital = no
					num_pops > 10
				}
				is_gestalt = no
				is_mechanical_empire = no
				NOT = {
					any_country = {
						is_ai = no
						NOR = {
							is_same_value = prev
							has_communications = prev
						}
					}
				}
			}
			weights = {
				base = 100
				modifier = {
					mult = 1.5
					OR = {
						has_valid_civic = civic_criminal_heritage
						has_valid_civic = civic_barbaric_despoilers
					}
				}
				modifier = {
					mult = 0.5
					OR = {
						has_valid_civic = civic_inwards_perfection
						has_valid_civic = civic_fanatic_purifiers
					}
				}
				modifier = {
					mult = 0.5
					is_ai = no
				}
			}
			country_event = {
				id = mem_black_rain.2
				days = @timer
				random = @timermax
			}
		}
	}
}

#Black rain appears
country_event = {
	id = mem_black_rain.2
	title = mem_black_rain.2.name
	desc = mem_black_rain.2.desc

	is_triggered_only = yes

	picture = GFX_evt_dark_alley
	location = event_target:starting_planet
	show_sound = event_planetary_riot

	trigger = {
		any_owned_planet = {
			is_capital = no
			num_pops > 10
		}
		is_mechanical_empire = no
	}

	immediate = {
		set_global_flag = mem_black_rain_started
		set_country_flag = mem_black_rain_affected_country
		set_country_flag = mem_black_rain_origin_country
		add_modifier = {
			modifier = mem_black_rain_ongoing_country
			days = -1
		}
		random_owned_planet = {
			limit = {
				is_capital = no
				num_pops > 10
			}
			save_event_target_as = starting_planet
			add_modifier = {
				modifier = mem_black_rain_appeared
				days = -1
			}
		}
		every_relation = {
			limit = {
				NOT = { is_same_value = root }
				is_gestalt = no
			}
			country_event = {
				id = mem_black_rain.3
			}
		}
		country_event = { id = mem_black_rain.4 days = @spreadloop random = @spreadloopmax }
	}

	option = {
		name = mem_black_rain.2.a
	}

	after = {
		tooltip = {
			add_modifier = {
				modifier = mem_black_rain_ongoing_country
				days = -1
			}
			event_target:starting_planet = {
				add_modifier = {
					modifier = mem_black_rain_appeared
					days = -1
				}
			}
		}
	}
}

# Other empires are notified
country_event = {
	id = mem_black_rain.3
	title = mem_black_rain.3.name
	desc = mem_black_rain.3.desc

	is_triggered_only = yes

	picture = GFX_evt_dark_alley
	location = event_target:starting_planet
	show_sound = event_planetary_riot

	option = {
		name = mem_black_rain.3.a
	}
}

# Spread event
@spread_chance = 3
country_event = {
	id = mem_black_rain.4
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_global_flag = mem_black_rain_started
		has_country_flag = mem_black_rain_affected_country
	}

	immediate = {
		log = "[This.GetName] is rolling Black Rain"
		random_list = {
			100 = {
				log = "[This.GetName] spread roll fail"
				modifier = {
					factor = 2
					OR = {
						has_valid_civic = civic_fanatic_purifiers
						has_valid_civic = civic_inwards_perfection
					}
				}
				modifier = {
					factor = 0.5
					OR = {
						has_valid_civic = civic_barbaric_despoilers
						has_valid_civic = civic_criminal_heritage
					}
				}
			}
			99 = {
				modifier = {
					factor = 0
					NOT = {
						any_owned_planet = {
							NOT = {
								has_modifier = mem_black_rain_appeared
							}
						}
					}
				}
				random_owned_planet = {
					limit = {
						NOT = {
							has_modifier = mem_black_rain_appeared
						}
					}
					weights = {
						base = 10
						modifier = {
							mult = 0.1
							OR = {
								is_capital = yes
								num_pops < 11
							}
						}
					}
					planet_event = { id = mem_black_rain.6 }
				}
			}
			99 = {
				save_event_target_as = origin_of_spread
				random_relation = {
					limit = {
						NOT = { has_country_flag = mem_black_rain_affected_country }
						is_gestalt = no
						is_country_type = default
					}
					weights = {
						base = 100
						modifier = {
							mult = 1.25
							is_neighbor_of = prev
						}
						modifier = {
							mult = 1.25
							has_commercial_pact = prev
						}
						modifier = {
							mult = 1.25
							has_migration_access = prev
						}
						modifier = {
							mult = 2.5
							exists = overlord
							overlord = { is_same_value = prevprev }
						}
						modifier = {
							mult = 1.5
							prev = {
								exists = overlord
								overlord = { is_same_value = prevprev }
							}
						}
						modifier = {
							mult = 1.75
							is_in_federation_with = prev
						}
						modifier = {
							mult = 0.5
							has_closed_borders = prev
						}
						modifier = {
							mult = 0.75
							OR = {
								has_valid_civic = civic_inwards_perfection
								has_valid_civic = civic_fanatic_purifiers
							}
						}
						modifier = {
							mult = 0.5
							is_rival = prev
						}
						modifier = {
							mult = 0.1
							OR = {
								num_pops < 25
								num_owned_planets < 2
							}
						}
					}
					country_event = {
						id = mem_black_rain.5
					}
				}
			}
		}
		random_owned_planet = {
			limit = {
				has_modifier = mem_black_rain_appeared
				NOT = { has_planet_flag = mem_black_rain_plevent_cooldown }
			}
			planet_event = { id = mem_black_rain.100 days = 30 }
		}
		country_event = { id = mem_black_rain.4 days = @spreadloop random = @spreadloopmax }
	}
}

# Country is subjected to pop ups
country_event = {
	id = mem_black_rain.5
	title = mem_black_rain.5.name
	desc = {
		text = mem_black_rain.5.desc.generic
		trigger = {
			NOR = {
				is_neighbor_of = event_target:origin_of_spread
				has_commercial_pact = event_target:origin_of_spread
				has_closed_borders = event_target:origin_of_spread
				AND = {
					exists = overlord
					overlord = { is_same_value = event_target:origin_of_spread }
				}
				event_target:origin_of_spread = {
					exists = overlord
					overlord = { is_same_value = event_target:origin_of_spread }
				}
				is_in_federation_with = event_target:origin_of_spread
				is_rival = event_target:origin_of_spread
				event_target:starting_planet = {
					has_branch_office = yes
					branch_office_owner = {
						is_same_value = event_target:origin_of_spread
					}
				}
			}
		}
	}
	desc = {
		text = mem_black_rain.5.desc.neigbour
		trigger = {
			is_neighbor_of = event_target:origin_of_spread
			NOR = {
				has_closed_borders = event_target:origin_of_spread
				is_rival = event_target:origin_of_spread
			}
		}
	}
	desc = {
		text = mem_black_rain.5.desc.migration
		trigger = {
			has_migration_access = event_target:origin_of_spread
		}
	}
	desc = {
		text = mem_black_rain.5.desc.pact
		trigger = {
			has_commercial_pact = event_target:origin_of_spread
			NOT = {
				event_target:starting_planet = {
					has_branch_office = yes
					branch_office_owner = {
						is_same_value = event_target:origin_of_spread
					}
				}
			}
		}
	}
	desc = {
		text = mem_black_rain.5.desc.closed
		trigger = {
			has_closed_borders = event_target:origin_of_spread
		}
	}
	desc = {
		text = mem_black_rain.5.desc.rival
		trigger = {
			is_rival = event_target:origin_of_spread
		}
	}
	desc = {
		text = mem_black_rain.5.desc.close_relations
		trigger = {
			OR = {
				AND = {
					exists = overlord
					overlord = { is_same_value = event_target:origin_of_spread }
				}
				event_target:origin_of_spread = {
					exists = overlord
					overlord = { is_same_value = event_target:origin_of_spread }
				}
				is_in_federation_with = event_target:origin_of_spread
			}
		}
	}
	desc = {
		text = mem_black_rain.5.branch
		trigger = {
			event_target:starting_planet = {
				has_branch_office = yes
				branch_office_owner = {
					is_same_value = event_target:origin_of_spread
					NOT = { has_valid_civic = civic_criminal_heritage }
				}
			}
		}
	}
	desc = {
		text = mem_black_rain.5.branch_criminal
		trigger = {
			event_target:starting_planet = {
				has_branch_office = yes
				branch_office_owner = {
					is_same_value = event_target:origin_of_spread
					has_valid_civic = civic_criminal_heritage
				}
			}
		}
	}

	is_triggered_only = yes

	picture = GFX_evt_dark_alley
	location = event_target:starting_planet
	show_sound = event_planetary_riot

	trigger = {
	}

	immediate = {
		log = "[This.GetName] gets Black Rain"
		set_country_flag = mem_black_rain_affected_country
		add_modifier = {
			modifier = mem_black_rain_ongoing_country
			days = -1
		}
		save_event_target_as = spread_receiver
		random_owned_planet = {
			weights = {
				base = 10
				modifier = {
					mult = 0.1
					is_capital = yes
				}
				modifier = {
					mult = 10
					has_branch_office = yes
					branch_office_owner = {
						is_same_value = event_target:origin_of_spread
					}	
				}
			}
			save_event_target_as = starting_planet
		}
		every_relation = {
			limit = {
				NOT = { is_same_value = root }
				is_gestalt = no
				is_ai = no
			}
			create_message = {
				type = EVENT_MESSAGE_TYPE
				localization = MEM_BLACK_RAIN_NEW_COUNTRY_AFFECTED
				days = 30
				target = event_target:starting_planet
				variable = {
					type = name
					localization = RECEIVER
					scope = root
				}
				variable = {
					type = name
					localization = ORIGIN
					scope = event_target:origin_of_spread
				}
			}
		}
		event_target:starting_planet = {
			add_modifier = {
				modifier = mem_black_rain_appeared
				days = -1
			}
		}
		country_event = { id = mem_black_rain.4 days = @spreadloop random = @spreadloopmax }
	}

	option = {
		name = mem_black_rain.5.a
	}

	option = {
		name = mem_black_rain.5.a.pur
		trigger = {
			has_valid_civic = civic_fanatic_purifiers
		}
	}
	option = {
		name = mem_black_rain.5.a.per
		trigger = {
			has_valid_civic = civic_inwards_perfection
		}
	}

	after = {
		tooltip = {
			add_modifier = {
				modifier = mem_black_rain_ongoing_country
				days = -1
			}
			event_target:starting_planet = {
				add_modifier = {
					modifier = mem_black_rain_appeared
					days = -1
				}
			}
		}
	}
}

# Black rain appears on another planet
planet_event = {
	id = mem_black_rain.6
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		log = "Black Rain spreads on [This.GetName]"
		add_modifier = {
			modifier = mem_black_rain_appeared
			days = -1
		}
		owner = {
			create_message = {
				type = EVENT_MESSAGE_TYPE
				localization = MEM_BLACK_RAIN_NEW_PLANET_AFFECTED
				days = 30
				target = root
				variable = {
					type = name
					localization = PLANET
					scope = root
				}
			}
			country_event = { id = mem_black_rain.7 }
		}
	}
}

# Notification for the first time
country_event = {
	id = mem_black_rain.7
	title = mem_black_rain.7.name
	desc = mem_black_rain.7.desc

	is_triggered_only = yes

	location = from
	picture = GFX_evt_dark_alley
	show_sound = event_planetary_riot

	trigger = {
		NOT = { has_country_flag = mem_black_rain_received_planet_notification }
	}

	immediate = {
		set_country_flag = mem_black_rain_received_planet_notification
	}

	option = {
		name = mem_black_rain.7.a
		tooltip = {
			from = {
				add_modifier = {
					modifier = mem_black_rain_appeared
					days = -1
				}
			}
		}
	}
}

# Ownerless planet - clear modifiers
planet_event = {
	id = mem_black_rain.8
	hide_window = yes
	is_triggered_only = yes

	immediate = {
		mem_black_rain_clear_planetary_modifiers = yes
	}
}

# Planet transfer - check for new owner, clear mods if that's an issue
planet_event = {
	id = mem_black_rain.9
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_modifier = mem_black_rain_appeared
	}

	immediate = {
		IF = {
			limit = {
				owner = {
					is_gestalt = no
					is_mechanical_empire = no
				}
			}
			owner = {
				country_event = { id = mem_black_rain.10 days = 30 }
			}
		}
		ELSE = {
			mem_black_rain_clear_planetary_modifiers = yes
		}
	}
}

# Planet transfer - player is notified that he picked up druggie planet
country_event = {
	id = mem_black_rain.10
	title = mem_black_rain.10.name
	desc = mem_black_rain.10.desc

	is_triggered_only = yes

	location = from
	picture = GFX_evt_dark_alley
	show_sound = event_planetary_riot

	trigger = {
		NOT = { has_country_flag = mem_black_rain_affected_country }
		has_global_flag = mem_black_rain_started
		from = {
			exists = owner
			owner = {
				is_same_value = root
			}
			has_modifier = mem_black_rain_appeared
		}
	}

	immediate = {
		set_country_flag = mem_black_rain_affected_country
		add_modifier = {
			modifier = mem_black_rain_ongoing_country
			days = -1
		}
	}

	option = {
		name = mem_black_rain.10.a
		tooltip = {
			add_modifier = {
				modifier = mem_black_rain_ongoing_country
				days = -1
			}
		}
	}
}

#The big fork of unfortunate planetary events
planet_event = {
	id = mem_black_rain.100
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_modifier = mem_black_rain_appeared
		NOT = { has_planet_flag = mem_black_rain_plevent_cooldown }
	}

	immediate = {
		set_timed_planet_flag = {
			flag = mem_black_rain_plevent_cooldown
			days = 1080
		}
		random_list = {
			100 = {}
			5 = {
				planet_event = { id = mem_black_rain.101 }
				modifier = {
					factor = 0
					NAND = {
						any_owned_pop = {
							is_same_species = owner
							is_organic_species = yes
						}
						count_owned_pops = {
							limit = {
								NOT = {
									is_same_species = owner
								}
								is_organic_species = yes
								is_pop_category = worker
								is_being_purged = no
							}
							count > 2
						}
						NOT = {
							owner = { has_country_flag = mem_black_rain_bigot_event }
						}
					}
				}
			}
		}
	}
}

#Minorities mad; controversial statements
planet_event = {
	id = mem_black_rain.101
	title = mem_black_rain.101.name
	desc = mem_black_rain.101.desc

	is_triggered_only = yes

	picture = GFX_evt_alien_segregation
	show_sound = event_planetary_riot
	location = ROOT

	immediate = {
		random_owned_pop = {
			limit = {
				NOT = {
					is_same_species = owner
				}
				is_organic_species = yes
				is_pop_category = worker
				is_being_purged = no
			}
			species = {
				save_event_target_as = victim_species
			}
			kill_pop = yes
		}
		owner = {
			set_country_flag = mem_black_rain_bigot_event
			create_saved_leader = {
				key = mem_black_rain_bigot_leader
				class = governor
				species = root.owner
				effect = {
					save_event_target_as = bigot_leader
				}
			}
		}
	}

	option = {
		name = mem_black_rain.101.a

		trigger = {
			owner = {
				NOT = { has_ethic = ethic_fanatic_xenophobe }
			}
		}

		owner = {
			add_resource = {
				influence = -50
			}
		}
	}

	option = {
		name = mem_black_rain.101.b

		trigger = {
			owner = {
				OR = {
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
				}
			}
		}

		add_modifier = {
			modifier = mem_black_rain_outraged_minorities
			days = 360
		}
		owner = {
			add_resource = {
				influence = 100
			}
		}
	}

	option = {
		name = mem_black_rain.101.c

		trigger = {
			owner = {
				NOR = {
					has_ethic = ethic_fanatic_xenophobe
					has_ethic = ethic_xenophobe
				}
			}
		}

		add_modifier = {
			modifier = mem_black_rain_outraged_minorities
			days = 360
		}
	}

	option = {
		name = mem_black_rain.101.d

		trigger = {
			event_target:victim_species = {
				has_citizenship_type = {
					country = root.owner
					type = citizenship_slavery
				}
			}
		}

		add_modifier = {
			modifier = mem_black_rain_outraged_minorities
			days = 360
		}
	}
}

