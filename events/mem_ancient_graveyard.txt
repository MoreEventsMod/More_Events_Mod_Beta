#An Ancient Graveyard
#Idea by ViolentBeetle
#Code by BLimmie (Oppen_heimer)

namespace = mem_ancient_graveyard

# Anomaly survey success
ship_event = {
	id = mem_ancient_graveyard.1
	title = "mem_ancient_graveyard.1.name"
	desc = "mem_ancient_graveyard.1.desc"
	picture = "GFX_evt_dead_city"
	is_triggered_only = yes

	option = {
		trigger = { 
			owner = {  
				NOR = { 
					has_ethic = ethic_xenophobe  
					has_ethic = ethic_fanatic_xenophobe 
				} 
			} 
		}
		name = mem_ancient_graveyard.1.default
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier1influencereward
				min = @tier1influencemin
				max = @tier1influencemax
			}
		}
		leader = {
			add_experience = 100
		}
	}
	
	option = {
		trigger = { 
			owner = {  
				OR = { 
					has_ethic = ethic_xenophobe  
					has_ethic = ethic_fanatic_xenophobe 
				} 
			} 
		}
		name = mem_ancient_graveyard.1.xenophobe
		owner = {
			add_monthly_resource_mult = {
				resource = influence
				value = @tier1influencereward
				min = @tier1influencemin
				max = @tier1influencemax
			}
		}
		leader = {
			add_experience = 50
		}
	}
}

# Anomaly survey failure
ship_event = {
	id = mem_ancient_graveyard.2
	title = "mem_ancient_graveyard.2.name"
	desc = "mem_ancient_graveyard.2.desc"
	picture = "GFX_evt_warm_barren"
	is_triggered_only = yes

	option = {
		name = mem_ancient_graveyard.2.dissapointing
	}
	
}