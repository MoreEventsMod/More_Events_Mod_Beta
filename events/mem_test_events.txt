##########################################
# Test Events
# A file for events where we test new code ideas
# Code by Frog and LamilLerran
##########################################

namespace = mem_test_event

#######################################
# LEX Test Events
# Mostly by Frog
# Events for testing content from LEX
# Owns 100s, 200s, 300s
#######################################

# set planet modifier for testing
planet_event = {
	id = mem_test_event.30001
    title = "mem_test_event.30001"
	desc = "mem_test_event.30001"
	picture = GFX_evt_mem_ancient_robots_project
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
		add_modifier = {
			modifier = starship_graveyard
			days = -1
		}
    }
	option = {
		name = "OK"
	}
}


# blocker graphics testing event
planet_event = {
	id = mem_test_event.20001
    title = "mem_test_event.20001"
	desc = "mem_test_event.20001"
	picture = GFX_evt_mem_ancient_robots_project
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
#		random_tile = {
#			set_blocker = tb_mem_seamonster
#		}
    }
	option = {
		name = "OK"
	}
}

# blocker graphics testing event
planet_event = {
	id = mem_test_event.20002
    title = "mem_test_event.20002"
	desc = "mem_test_event.20002"
	picture = GFX_evt_mem_ancient_robots_project
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
#		random_tile = {
#			set_blocker = tb_mountain_range
#		}
    }
	option = {
		name = "OK"
	}
}

# ambient object testing
planet_event = {
	id = mem_test_event.20003
    title = "mem_test_event.20003"
	desc = "mem_test_event.20003"
	picture = GFX_evt_mem_ancient_robots_project
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
		create_ambient_object = {
			type = "mem_pride_of_harilla_object"
			location = THIS
		}
    }
	option = {
		name = "OK"
	}
}

# ambient object testing
planet_event = {
	id = mem_test_event.20004
    title = "mem_test_event.20004"
	desc = "mem_test_event.20004"
	picture = GFX_evt_mem_ancient_robots_project
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
		create_ambient_object = {
			type = "mem_pride_of_harilla_reactor_object"
			location = THIS
		}
    }
	option = {
		name = "OK"
	}
}

# ambient object testing
planet_event = {
	id = mem_test_event.20005
    title = "mem_test_event.20005"
	desc = "mem_test_event.20005"
	picture = GFX_evt_mem_ancient_robots_project
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
		create_ambient_object = {
			type = "mem_pride_of_harilla_restoration_object"
			location = THIS
		}
    }
	option = {
		name = "OK"
	}
}

# event_pic testing events
country_event = {
	id = mem_test_event.10001
    title = "mem_test_event.10001"
	desc = "mem_test_event.10001"
	picture = GFX_evt_mem_ancient_robots_project
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10002
    title = "mem_test_event.10002"
	desc = "mem_test_event.10002"
	picture = GFX_evt_mem_crashlanding
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10003
    title = "mem_test_event.10003"
	desc = "mem_test_event.10003"
	picture = GFX_evt_mem_mecha
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10004
    title = "mem_test_event.10004"
	desc = "mem_test_event.10004"
	picture = GFX_evt_mem_native_interaction
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10005
    title = "mem_test_event.10005"
	desc = "mem_test_event.10005"
	picture = GFX_evt_mem_ground_combat
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10006
    title = "mem_test_event.10006"
	desc = "mem_test_event.10006"
	picture = GFX_evt_mem_evil_hideout
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10007
    title = "mem_test_event.10007"
	desc = "mem_test_event.10007"
	picture = GFX_evt_mem_neutral_hideout
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10008
    title = "mem_test_event.10008"
	desc = "mem_test_event.10008"
	picture = GFX_evt_mem_frozen_march
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10009
    title = "mem_test_event.10009"
	desc = "mem_test_event.10009"
	picture = GFX_evt_mem_frozen_wreckage
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10010
    title = "mem_test_event.10010"
	desc = "mem_test_event.10010"
	picture = GFX_evt_mem_mountain_ruin
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10011
    title = "mem_test_event.10011"
	desc = "mem_test_event.10011"
	picture = GFX_evt_mem_seamonster
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10012
    title = "mem_test_event.10012"
	desc = "mem_test_event.10012"
	picture = GFX_evt_mem_ancient_mining_site
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10013
    title = "mem_test_event.10013"
	desc = "mem_test_event.10013"
	picture = GFX_evt_mem_ancient_tower
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10014
    title = "mem_test_event.10014"
	desc = "mem_test_event.10014"
	picture = GFX_evt_mem_cannon_installation
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10015
    title = "mem_test_event.10015"
	desc = "mem_test_event.10015"
	picture = GFX_evt_mem_disabled_mech
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10016
    title = "mem_test_event.10016"
	desc = "mem_test_event.10016"
	picture = GFX_evt_mem_horror_corridor
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10017
    title = "mem_test_event.10017"
	desc = "mem_test_event.10017"
	picture = GFX_evt_mem_strange_structures
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10018
    title = "mem_test_event.10018"
	desc = "mem_test_event.10018"
	picture = GFX_evt_mem_strange_tectonics
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10019
    title = "mem_test_event.10019"
	desc = "mem_test_event.10019"
	picture = GFX_evt_mem_wreckage_shelter
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10020
    title = "mem_test_event.10020"
	desc = "mem_test_event.10020"
	picture = GFX_evt_mem_apocalypse
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10021
    title = "mem_test_event.10021"
	desc = "mem_test_event.10021"
	picture = GFX_evt_mem_space_battle
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10022
    title = "mem_test_event.10022"
	desc = "mem_test_event.10022"
	picture = GFX_evt_mem_heavy_damage
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10023
    title = "mem_test_event.10023"
	desc = "mem_test_event.10023"
	picture = GFX_evt_mem_big_asteroid
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10024
    title = "mem_test_event.10024"
	desc = "mem_test_event.10024"
	picture = GFX_evt_mem_asteroid_approach
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10025
    title = "mem_test_event.10025"
	desc = "mem_test_event.10025"
	picture = GFX_evt_mem_asteroid_field
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10026
    title = "mem_test_event.10026"
	desc = "mem_test_event.10026"
	picture = GFX_evt_mem_inferno
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10027
    title = "mem_test_event.10027"
	desc = "mem_test_event.10027"
	picture = GFX_evt_mem_hive_cities
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10028
    title = "mem_test_event.10028"
	desc = "mem_test_event.10028"
	picture = GFX_evt_mem_laboratory
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10029
    title = "mem_test_event.10029"
	desc = "mem_test_event.10029"
	picture = GFX_evt_mem_strange_apparatus
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10030
    title = "mem_test_event.10030"
	desc = "mem_test_event.10030"
	picture = GFX_evt_mem_lava_fortress
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10031
    title = "mem_test_event.10031"
	desc = "mem_test_event.10031"
	picture = GFX_evt_mem_options
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10032
    title = "mem_test_event.10032"
	desc = "mem_test_event.10032"
	picture = GFX_evt_mem_giant_tanks
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.10033
    title = "mem_test_event.10033"
	desc = "mem_test_event.10033"
	picture = GFX_evt_mem_victory
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.101
    title = "mem_test_event.101"
	desc = "mem_test_event.101"
	picture = GFX_evt_mem_ancient_robots_project
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
		capital_scope = {
				create_fleet = {
					name = "Solar Envoy"
					settings = {
					spawn_debris = no 
					is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Kether"
					}
					create_ship = {
						name = "Metatron"
						design = last_created_design
						graphical_culture = "fallen_empire_02"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
	option = {
		name = "OK"
	}
}

country_event = {
	id = mem_test_event.102
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

immediate = {
	capital_scope = {
		    create_fleet = {
			    name = "Ancient Warform"
				settings = {
				spawn_debris = no 
				is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Geburah"
					}
					create_ship = {
						name = "Chamuel"
						design = last_created_design
						graphical_culture = "fallen_empire_01"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id = mem_test_event.103
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

immediate = {
	capital_scope = {
		    create_fleet = {
			    name = "Gravekeeper"
				settings = {
				spawn_debris = no 
				is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Semias"
					}
					create_ship = {
						name = "Murias"
						design = last_created_design
						graphical_culture = "fallen_empire_04"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id = mem_test_event.104
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

immediate = {
	capital_scope = {
		    create_fleet = {
			    name = "Awakened Gravekeeper"
				settings = {
				spawn_debris = no 
				is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Uscias"
					}
					create_ship = {
						name = "Finias"
						design = last_created_design
						graphical_culture = "fallen_empire_04"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id = mem_test_event.105
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

immediate = {
	capital_scope = {
		    create_fleet = {
			    name = "Providence"
				settings = {
				spawn_debris = no 
				is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Matet"
					}
					create_ship = {
						name = "Conduit"
						design = last_created_design
						graphical_culture = "fallen_empire_03"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id = mem_test_event.106
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

immediate = {
	capital_scope = {
		    create_fleet = {
			    name = "The Conduit"
				settings = {
				spawn_debris = no 
				is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Kheru'ur"
					}
					create_ship = {
						name = "Bulwark"
						design = last_created_design
						graphical_culture = "fallen_empire_03"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id = mem_test_event.107
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

immediate = {
	capital_scope = {
		    create_fleet = {
			    name = "The Conduit"
				settings = {
				spawn_debris = no 
				is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Nephtys"
					}
					create_ship = {
						name = "Conduit"
						design = last_created_design
						graphical_culture = "fallen_empire_03"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id = mem_test_event.108
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

immediate = {
	capital_scope = {
		    create_fleet = {
			    name = "The Conduit"
				settings = {
				spawn_debris = no 
				is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Seth"
					}
					create_ship = {
						name = "Conduit"
						design = last_created_design
						graphical_culture = "fallen_empire_03"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id = mem_test_event.109
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

immediate = {
	capital_scope = {
		    create_fleet = {
			    name = "The Conduit"
				settings = {
				spawn_debris = no 
				is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Osiris"
					}
					create_ship = {
						name = "Conduit"
						design = last_created_design
						graphical_culture = "fallen_empire_03"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id = mem_test_event.110
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

immediate = {
	capital_scope = {
		    create_fleet = {
			    name = "Providence"
				settings = {
				spawn_debris = no 
				is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Seqtet"
					}
					create_ship = {
						name = "Conduit"
						design = last_created_design
						graphical_culture = "fallen_empire_03"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id = mem_test_event.111
    hide_window = yes
	is_triggered_only = yes
#	fire_only_once = yes
	location = root
#	is_triggered_only = yes
	
	trigger = { always = no }

	immediate = {
		capital_scope = {
		    create_fleet = {
			    name = "Anchor Station"
				settings = {
					spawn_debris = no 
					is_boss = yes
				}
			    effect = {
					set_owner = ROOT
					create_ship_design = {
						design = "Aten"
					}
					create_ship = {
						name = "Conduit"
						design = last_created_design
						graphical_culture = "fallen_empire_03"
						prefix = no
					}
					set_location = {
						target = PREV
						distance = 45
						angle = random 
					}
				}
			}
		}	
    }
}

country_event = {
	id =  mem_test_event.112
	hide_window = yes
	is_triggered_only = yes
	
	immediate = {
		capital_scope = {
			solar_system = {
				spawn_system = {
					min_distance >= 10
					max_distance <= 30
					initializer = "mem_ea_uplifter_homesystem"
				}
			}
		}
	}
}

planet_event = {
	id = mem_test_event.99991
	title = "mem_test_event.99991.name"
	desc = "mem_test_event.99991.desc"
	picture = GFX_evt_space_station
	is_triggered_only = yes
	
	immediate = { 
#		spawn_system = {
#			min_distance >= 2
#			max_distance <= 10
#			initializer = mem_ringworld
#		}
	}
	
	option = { name = "mem_test_event.100.a" }
}

planet_event = {
	id = mem_test_event.99992
	title = "mem_test_event.99992.name"
	desc = "mem_test_event.99992.desc"
	picture = GFX_evt_space_station
	is_triggered_only = yes
	
	immediate = { 
#		spawn_system = {
#			min_distance >= 2
#			max_distance <= 10
#			initializer = mem_graveyard
#		}
	}
	
	option = { name = "mem_test_event.200.a" }
}

planet_event = {
	id = mem_test_event.99993
	title = "mem_test_event.99993.name"
	desc = "mem_test_event.99993.desc"
	picture = GFX_evt_space_station
	is_triggered_only = yes
	
	immediate = { 
#		spawn_system = {
#			min_distance >= 2
#			max_distance <= 10
#			initializer = mem_garden
#		}
	}
	
	option = { name = "mem_test_event.300.a" }
}

################################################################
# Generic Test Events
# Mostly by LamilLerran
# Events with functionality useful for general event testing
# Owns 1 - 99
################################################################

# Spawn blockers and resources
planet_event = {
	id = mem_test_event.32121
	title = "mem_test_event.32121.name"
	desc = "mem_test_event.32121.desc"
	picture = GFX_evt_ship_in_orbit
	is_triggered_only = yes
	
	immediate = {
#		every_tile = {
#			limit = { has_grown_pop = no }
#			set_blocker = tb_failing_infrastructure
#			random_ressources = yes
#		}
	}
	
	option = {
		name = "mem_test_event.3.a"
	}
}

# Change graphical culture
ship_event = {
	id = mem_test_event.42121
	title = "mem_test_event.42121.name"
	desc = "mem_test_event.42121.desc"
	picture = GFX_evt_ship_in_orbit
	is_triggered_only = yes
	
	immediate = {
		owner = { set_graphical_culture = mammalian_01 }
	}
	
	option = {
		name = "mem_test_event.4.a"
	}
}

# Empty country event
country_event = {
	id = mem_test_event.52121
	title = "mem_test_event.52121.name"
	desc = "mem_test_event.52121.desc"
	picture = GFX_evt_ship_in_orbit
	is_triggered_only = yes
	
	option = {
		name = "mem_test_event.5.a"
	}
	
	option = {
		name = "mem_test_event.5.b"
	}
}

planet_event = {
	id = mem_test_event.52122
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		while = {
			limit = {
				count_pops = {
					limit = { is_sapient = no }
					count < 3
				}
#				free_pop_tiles > 0
			}
#			best_tile_for_pop = {
#				create_pop = { species = last_created }
#			}
		}
	}
}

planet_event = {
	id = mem_test_event.52123
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		create_species = {
			name = random
			class = random
			portrait = random
			homeworld = THIS
			traits = {
				trait = random_traits
			}
		}
		last_created_species = {
			save_global_event_target_as = mem_test_species
		}
		create_country = {
			name = random
			authority = random
			civics = {
				civic = civic_landed_nobility
				civic = civic_flat_world_theory
			}
			species = last_created
			ethos = random
			flag = {
				icon = {
					category = "special"
					file = "primitive.dds"
				}
				background= {
					category = "backgrounds"
					file = "new_dawn.dds"
				}
				colors={
					"turquoise"
					"green"
					"null"
					"null"
				}
			}
			type = primitive
		}
		last_created_country = {
			#to prevent them from developing on their own permanently
			set_country_flag = recently_advanced
			set_graphical_culture = preindustrial_01
			random_list = {
				20 = {
					set_country_flag = stone_age 
					set_primitive_age = stone_age
					change_government = {
						authority = random
						civics = {
							civic = civic_secret_of_fire
							civic = civic_the_wheel
						}
					}
				}
				25 = {
					set_country_flag = bronze_age 
					set_primitive_age = bronze_age
					change_government = {
						authority = random
						civics = {
							civic = civic_secret_of_fire
							civic = civic_the_wheel
						}
					}
					change_country_flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"green"
							"dark_green"
							"null"
							"null"
						}
					}
				}
				25 = {
					set_country_flag = iron_age 
					set_primitive_age = iron_age
					change_country_flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"purple"
							"dark_purple"
							"null"
							"null"
						}
					}
				}
				20 = {
					set_country_flag = late_medieval_age 
					set_primitive_age = late_medieval_age
					change_country_flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"light_blue"
							"blue"
							"null"
							"null"
						}
					}
				}
				10 = {
					set_country_flag = renaissance_age 
					set_primitive_age = renaissance_age
					change_country_flag = {
						icon = {
							category = "special"
							file = "primitive.dds"
						}
						background= {
							category = "backgrounds"
							file = "new_dawn.dds"
						}
						colors={
							"pink"
							"burgundy"
							"null"
							"null"
						}
					}
				}
			}
		}
		create_colony = {
			owner = last_created_country
			species = last_created
			ethos = owner
		}
#		random_tile = {
#			limit = {
#				has_blocker = no
#				has_grown_pop = no
#				has_growing_pop = no
#			}
#			create_pop = {
#				species = last_created
#			}
#		}
		if = {
			limit = {
				last_created_country = {
					OR = {
						has_country_flag = steam_age
						has_country_flag = renaissance_age
					}
				}
			}
#			random_tile = {
#				limit = {
#					has_blocker = no
#					has_grown_pop = no
#					has_growing_pop = no
#				}
#				create_pop = {
#					species = last_created
#				}
#			}						
		}
#		random_tile = {
#			limit = { has_building = "building_colony_shelter" }
#			remove_building = yes
#		}					
		while = {
			count = 2
#			random_tile = {
#				limit = { 
#					has_blocker = no 
#					has_building = no 
#					has_grown_pop = yes
#				}
#				set_building = "building_primitive_farm"										
#				set_deposit = d_rich_farmland_deposit						
#			}
		}
		if = {
			limit = {
				last_created_country = {
					has_country_flag = stone_age
				}
			}	
#			every_tile = {
#				limit = {
#					has_building = "building_primitive_farm"
#				}
#				remove_building = yes
#			}
		}
		if = {
			limit = {
				last_created_country = {
					OR = {
						has_country_flag = iron_age 
						has_country_flag = late_medieval_age 									
						has_country_flag = renaissance_age
						has_country_flag = steam_age
					}
				}
			}
#			random_tile = {
#				limit = {
#					has_blocker = no
#					has_grown_pop = no
#					has_growing_pop = no
#				}
#				create_pop = {
#					species = last_created
#				}
#			}						
#			random_tile = {
#				limit = { 
#					has_blocker = no 
#					has_building = no 
#					has_grown_pop = yes
#				}
#				set_building = "building_primitive_farm"
#				set_deposit = d_rich_farmland_deposit						
#			}						
		}					
		if = {
			limit = {
				last_created_country = {
					OR = {
						has_country_flag = steam_age
						has_country_flag = renaissance_age
					}
				}
			}
#			random_tile = {
#				limit = { 
#					has_blocker = no 
#					has_building = no 
#					has_grown_pop = yes
#				}
#				set_building = "building_primitive_farm"
#				set_deposit = d_rich_farmland_deposit						
#			}						
		}
#		random_tile = {
#			limit = {
#				has_blocker = no
#				has_grown_pop = no
#				has_growing_pop = no
#				has_building = no
#			}
#			set_building = "building_mem_planetary_shield_generator_orila"
#		}
		planet_event = { id = mem_planetary_shields.5 }
		event_target:mem_test_species = {
			create_species = {
				name = this
				plural = this
				class = this
				portrait = this
				traits = {
					trait = random_presapient_trait
				}
				homeworld = ROOT
				sapient = no
			}
		}
	}
}

planet_event = {
	id = mem_test_event.52124
	hide_window = yes
	
	is_triggered_only = yes
	
	immediate = {
		destroy_colony = yes
	}
}

# mem_test_event.10
# Spawn a fleet of 10 naval capacity.
# Mix of pirate destroyers & corvettes
planet_event = {
	id = mem_test_event.10212
	title = mem_test_event.10212.name
	desc = mem_test_event.10212.desc
	picture = GFX_evt_fleet_good
	is_triggered_only = yes
	
	trigger = {
		has_owner = yes
	}
	
	immediate = {
		create_fleet = {
			name = "Test Fleet of Ten"
			effect = {
				set_owner = root.owner
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Dagger"
				}
				create_ship = {
					design = "Dagger"
				}
				create_ship = {
					design = "Dagger"
				}
				create_ship = {
					design = "Dagger"
				}
				set_location = root
			}
		}
	}
	
	option = {
		name = OK
	}
}

# mem_test_event.20
# Spawn a fleet of 20 naval capacity.
# Mix of pirate cruisers, destroyers, & corvettes
planet_event = {
	id = mem_test_event.20
	title = mem_test_event.20.name
	desc = mem_test_event.20.desc
	picture = GFX_evt_fleet_good
	is_triggered_only = yes
	
	trigger = {
		has_owner = yes
	}
	
	immediate = {
		create_fleet = {
			name = "Test Fleet of Twenty"
			effect = {
				set_owner = root.owner
				create_ship = {
					design = "Sword"
				}
				create_ship = {
					design = "Sword"
				}
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Dagger"
				}
				create_ship = {
					design = "Dagger"
				}
				create_ship = {
					design = "Dagger"
				}
				create_ship = {
					design = "Dagger"
				}
				set_location = root
			}
		}
	}
	
	option = {
		name = OK
	}
}

# mem_test_event.50
# Spawn a fleet of 50 naval capacity.
# Mix of sentinel battleships, pirate cruisers, plus a few pirate destroyers & corvettes
planet_event = {
	id = mem_test_event.50
	title = mem_test_event.50.name
	desc = mem_test_event.50.desc
	picture = GFX_evt_fleet_good
	is_triggered_only = yes
	
	trigger = {
		has_owner = yes
	}
	
	immediate = {
		create_fleet = {
			name = "Test Fleet of Fifty"
			effect = {
				set_owner = root.owner
				create_ship = {
					design = "Spearhead"
				}
				create_ship = {
					design = "Spearhead"
				}
				create_ship = {
					design = "Sword"
				}
				create_ship = {
					design = "Sword"
				}
				create_ship = {
					design = "Sword"
				}
				create_ship = {
					design = "Sword"
				}
				create_ship = {
					design = "Sword"
				}
				create_ship = {
					design = "Sword"
				}
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Ravager"
				}
				create_ship = {
					design = "Dagger"
				}
				create_ship = {
					design = "Dagger"
				}
				create_ship = {
					design = "Dagger"
				}
				create_ship = {
					design = "Dagger"
				}
				set_location = root
			}
		}
	}
	
	option = {
		name = OK
	}
}

# mem_test_event.80
# Spawn a fleet of 80 naval capacity.
# Mix of sentinel ships; has every size but emphasizes battleships (4) and cruisers (8)
planet_event = {
	id = mem_test_event.80
	title = mem_test_event.50.name
	desc = mem_test_event.50.desc
	picture = GFX_evt_fleet_good
	is_triggered_only = yes
	
	trigger = {
		has_owner = yes
	}
	
	immediate = {
		create_fleet = {
			name = "Test Fleet of Eighty"
			effect = {
				set_owner = root.owner
				create_ship = {
					design = "Spearhead"
				}
				create_ship = {
					design = "Spearhead"
				}
				create_ship = {
					design = "Spearhead"
				}
				create_ship = {
					design = "Spearhead"
				}
				create_ship = {
					design = "Death's Head"
				}
				create_ship = {
					design = "Death's Head"
				}
				create_ship = {
					design = "Death's Head"
				}
				create_ship = {
					design = "Death's Head"
				}
				create_ship = {
					design = "Death's Head"
				}
				create_ship = {
					design = "Death's Head"
				}
				create_ship = {
					design = "Death's Head"
				}
				create_ship = {
					design = "Death's Head"
				}
				create_ship = {
					design = "Bug Crusher"
				}
				create_ship = {
					design = "Bug Crusher"
				}
				create_ship = {
					design = "Bug Crusher"
				}
				create_ship = {
					design = "Bug Crusher"
				}
				create_ship = {
					design = "Bug Crusher"
				}
				create_ship = {
					design = "Blade"
				}
				create_ship = {
					design = "Blade"
				}
				create_ship = {
					design = "Blade"
				}
				create_ship = {
					design = "Blade"
				}
				create_ship = {
					design = "Blade"
				}
				create_ship = {
					design = "Blade"
				}
				set_location = root
			}
		}
	}
	
	option = {
		name = OK
	}
}
