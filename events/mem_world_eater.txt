# World-Eater
# Code and text by ViolentBeetle
# Idea borrowed by u/Dmaned11123 (Though it's not all that original, is it?)
# The spherical mesh is provided by Gigastructural Engineering people

namespace = mem_world_eater

# Gatekeeper
event = {
    id = mem_world_eater.1
    hide_window = yes
    is_triggered_only = yes

    trigger = {
    }

    immediate = {
        random_list = {
            0 = {}
            35 = {
                set_global_flag = mem_world_eater_enabled
            }
        }
    }
}

# On building the lure, make a roll
planet_event = {
    id = mem_world_eater.2
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        NOT = { has_global_flag = mem_world_eater_showed_up }
        exists = owner
        owner = {
            NOT = {
                has_country_flag = mem_world_eater_spared
            }
        }
        has_building = building_mem_world_eater_lure
    }

    immediate = {
        log = "[Root.GetName] making a lure roll"
        random_list = {
            0 = {
                owner = {
                    set_country_flag = mem_world_eater_spared
                }
            }
            55 = {
                planet_event = {
                    id = mem_world_eater.3
                }
            }
        }
    }
}

# The arrival
planet_event = {
    id = mem_world_eater.3
    title = mem_world_eater.3.name
    desc = mem_world_eater.3.desc

    is_triggered_only = yes

    picture = GFX_evt_mem_rift
    show_sound = event_yellow_alert
    location = event_target:arrival_system

    immediate = {
        set_global_flag = mem_world_eater_showed_up
        owner = {
            save_event_target_as = the_summoner
            set_country_flag = mem_world_eater_summoner
            every_relation = {
                limit = {
                    is_country_type = default
                }
                add_opinion_modifier = {
                    who = PREV
                    modifier = mem_world_eater_opened_rift
                }
            }
        }
        create_country = {
            name = "World Eater"
            type = mem_world_eater_country
            flag = {
                icon = {
                    category = human
                    file = flag_human_1.dds
                }
                background = {
                    category = backgrounds
                    file = triangle_split.dds
                }
                colors = {
                    "orange"
                    "yellow"
                    "null"
                    "null"
                }
            }
            effect = {
                log = "[This.GetName] country created"
                save_event_target_as = world_eater_country
                add_modifier = {
                    modifier = mem_world_eater_power
                }
            }
        }
        random_system = {
            limit = {
                distance = {
                    source = ROOT
                    min_jumps = 1
                    max_jumps = 2
                }
            }
            save_event_target_as = arrival_system
            create_ambient_object = {
                type = mem_world_eater_sinkhole
                location = this
                duration = 360   
            }
            last_created_ambient_object = {
                save_event_target_as = entry_sinkhole
            }
            IF = {
                limit = { exists = space_owner }
                space_owner = {
                    country_event = { id = mem_world_eater.7 }
                }
            }
        }
        event_target:world_eater_country = {
            country_event = {
                id = mem_world_eater.4
                days = 60
            }
        }
    }

    option = {
        name = mem_world_eater.3.a
    }
}

# Let's get it started!
country_event = {
    id = mem_world_eater.4
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        set_global_flag = mem_world_eater_showed_up
        log = "World Eater Enters Space. Effect applied to country [This.GetName]. Solar system is [arrival_system.GetName]"
        create_ship_design = { design = "Swallower of Worlds" }
        create_fleet = {
            name = "Swallower of Worlds"
            effect = {
                create_ship = {
                    name = "Swallower of Worlds"
                    design = last_created_design
                    effect = {
                        # set_disable_at_health = 0.1
                        set_ship_flag = mem_world_eater_ship
                        save_event_target_as = world_eater_ship
                    }
                }
                set_owner = root
                set_location = event_target:entry_sinkhole
                set_fleet_flag = mem_world_eater_fleet
            }
        }
        event_target:arrival_system = {
            IF = {
                limit = { exists = space_owner }
                space_owner = {
                    set_country_flag = mem_world_eater_system_owner
                    establish_communications_no_message = root
                    country_event = { id = mem_world_eater.5 }
                }
            }
            every_country = {
                limit = {
                    NOT = { has_country_flag = mem_world_eater_system_owner }
                }
                establish_communications_no_message = root
                country_event = { id = mem_world_eater.6 }
            }            
        }
    }
}

# Space Owner is notified
country_event = {
    id = mem_world_eater.5
    title = mem_world_eater.5.name
    desc = {
        trigger = {
            has_country_flag = mem_world_eater_summoner
        }
        text = mem_world_eater.5.desc.summoner
    }
    desc = {
        trigger = {
            NOT = {
                has_country_flag = mem_world_eater_summoner
            }
        }
        text = mem_world_eater.5.desc.not_summoner
    }

    is_triggered_only = yes

    location = event_target:world_eater_ship
    show_sound = event_red_alert
    picture = GFX_evt_unspeakable_horror

    trigger = {
        is_ai = no
    }

    option = {
        name = BATTLESTATIONS
        IF = {
            limit = {
                NOT = { has_country_flag = mem_world_eater_summoner }
            }
            add_opinion_modifier = {
                who = event_target:the_summoner
                modifier = mem_world_eater_unleashed_eater_on_me
            }
        }
    }
}

# Everyone else is also notified
country_event = {
    id = mem_world_eater.6
    title = mem_world_eater.5.name
    desc = {
        trigger = {
            has_country_flag = mem_world_eater_summoner
        }
        text = mem_world_eater.6.desc.summoner
    }
    desc = {
        trigger = {
            NOT = {
                has_country_flag = mem_world_eater_summoner
            }
        }
        text = mem_world_eater.6.desc.not_summoner
    }

    is_triggered_only = yes

    location = event_target:arrival_system
    show_sound = event_sensor_ping
    picture = GFX_evt_unspeakable_horror

    trigger = {
        is_ai = no
    }

    option = {
        name = mem_world_eater.6.a
        IF = {
            limit = {
                NOT = { has_country_flag = mem_world_eater_summoner }
            }
            add_opinion_modifier = {
                who = event_target:the_summoner
                modifier = mem_world_eater_unleashed_the_eater
            }
        }
    }
}

# Space owner is notified of a wormhole
country_event = {
    id = mem_world_eater.7
    title = mem_world_eater.7.name
    desc = mem_world_eater.7.desc

    is_triggered_only = yes

    picture = GFX_evt_mem_rift
    show_sound = event_yellow_alert
    location = event_target:arrival_system

    trigger = {
        NOT = { has_country_flag = mem_world_eater_summoner }
    }

    option = {
        name = mem_world_eater.7.a
    }
}

# World Ether eats the planet
planet_event = {
    id = mem_world_eater.8
    title = mem_world_eater.8.name
    desc = mem_world_eater.8.desc

    is_triggered_only = yes

    picture = GFX_evt_space_monster
    location = ROOT
    show_sound = event_screams

    trigger = {
        planet_devastation >= 100
        FROM = {
            is_country_type = mem_world_eater_country
        }
    }

    immediate = {
        log = "[Root.GetName] eaten by [From.GetName]"
        IF = {
            limit = { is_planet_class = pc_habitat }
            remove_planet = yes
        }
        ELSE_IF = {
            limit = { is_planet_class = pc_ringworld_habitable }
            change_pc = pc_ringworld_habitable_damaged
            reset_planet = yes
        }
        ELSE = {
            random_list = {
                40 = {
                    destroy_colony = yes
                    change_pc = pc_nuked
                    reroll_planet = yes
                    add_modifier = {
                        modifier = mem_world_eater_devastation
                    }
                    set_planet_flag = primitives_nuked_themselves
                    set_planet_flag = colony_event
                    modifier = {
                        factor = 0
                        OR = {
                            is_planet_class = pc_nuked
                            is_planet_class = pc_relic
                            is_planet_class = pc_hive
                            is_planet_class = pc_machine
                            is_planet_class = pc_city
                            has_modifier = mem_world_eater_devastation
                        }
                    }
                }
                30 = {
                    random_list = {
                        50 = { change_pc = pc_barren }
                        50 = { change_pc = pc_barren_cold }
                    }
                    reset_planet = yes
                    add_modifier = {
                        modifier = terraforming_candidate
                    }
                }
                30 = {
                    change_pc = pc_toxic
                    reset_planet = yes
                }
            }
        }
        FROM = {
            random_owned_ship = {
                add_modifier = {
                    modifier = mem_world_eater_well_fed
                    days = 360
                }
            }
        }
    }

    option = {
        name = mem_world_eater.8.a
    }
}

# World Eater's Defeat
country_event = {
    id = mem_world_eater.9
    title = mem_world_eater.9.name
    desc = mem_world_eater.9.desc

    is_triggered_only = yes

    show_sound = event_space_battle
    location = FROMFROM
    picture = GFX_evt_space_monster

    trigger = {
        FROM = { is_country_type = mem_world_eater_country }
    }

    immediate = {
        log = "[Root.GetName] killed World Eater"
        FROMFROM.Solar_System = { save_event_target_as = battle_system }
        every_playable_country = {
            limit = {
                NOT = { is_same_value = root }
            }
            add_opinion_modifier = {
                who = ROOT
                modifier = mem_world_eater_defeated_it
            }
            country_event = {
                id = mem_world_eater.10
            }
        }
    }

    option = {
        name = mem_world_eater.9.a
        add_resource = {
            alloys = 1500
            minerals = 3000
            sr_dark_matter = 500
            sr_living_metal = 500
        }
        add_random_research_option = {
            add_progress = 0.50
            area = engineering
            ignore_prereqs = no
            fail_effects = {
                add_monthly_resource_mult = {
                    resource = engineering_research
                    value = @tier5researchreward
                    min = @tier5researchmin
                    max = @tier5researchmax
                }
            }
        }
        add_random_research_option = {
            add_progress = 0.50
            area = physics
            ignore_prereqs = no
            fail_effects = {
                add_monthly_resource_mult = {
                    resource = physics_research
                    value = @tier5researchreward
                    min = @tier5researchmin
                    max = @tier5researchmax
                }
            }
        }
        add_random_research_option = {
            add_progress = 0.50
            area = society
            ignore_prereqs = no
            fail_effects = {
                add_monthly_resource_mult = {
                    resource = society_research
                    value = @tier5researchreward
                    min = @tier5researchmin
                    max = @tier5researchmax
                }
            }
        }
    }
}

#Notification for all
country_event = {
    id = mem_world_eater.10
    title = mem_world_eater.10.name
    desc = mem_world_eater.10.desc

    is_triggered_only = yes

    location = event_target:battle_system
    show_sound = event_celebration
    picture = GFX_evt_space_monster

    option = {
        name = OK
    }
}